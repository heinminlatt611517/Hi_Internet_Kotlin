apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.hti.hiinternet"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 22
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /*  javaCompileOptions {
              annotationProcessorOptions {
                  arguments = ["dagger.gradle.incremental": "true"]
              }
          }*/
    }


    signingConfigs {

        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


    buildTypes {
        release {

            signingConfig signingConfigs.release
            minifyEnabled true
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }



        debug {
            debuggable true
            minifyEnabled false
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def SEP = "_"
                    //def buildType = variant.variantData.variantConfiguration.buildType.name
                    def buildType = variant.buildType.name
                    def version = variant.versionName
                    def date = new Date()
                    def formattedDate = date.format('ddMMyy_HHmm')
                    def newApkName = "Hi Internet" + SEP + formattedDate + SEP + buildType + SEP + version + ".apk"
                    outputFileName = new File(newApkName)
                }
            }
        }
    }

    kapt {
        generateStubs = true
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"

    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
    

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:$material_design_version"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation "com.google.dagger:dagger-android:$dagger_version"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.yarolegovich:discrete-scrollview:1.4.9'
    implementation 'com.github.Kshitij-Jain:IndicatorView:1.25'

    implementation "com.marcinmoskala.PreferenceHolder:preferenceholder:1.51"
    implementation 'com.github.nitrico.lastadapter:lastadapter:2.3.0'
    implementation 'com.google.firebase:firebase-messaging:17.3.1'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.smarteist:autoimageslider:1.3.2-appcompat'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    implementation "android.arch.persistence.room:runtime:2.2.3 "
    annotationProcessor "android.arch.persistence.room:compiler:2.2.3"
    implementation "androidx.room:room-rxjava2:2.1.0"

    kapt "android.arch.persistence.room:compiler:2.2.3"

    implementation 'com.jaredrummler:material-spinner:1.3.1'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.google.firebase:firebase-analytics:16.0.3'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'com.gauravbhola.ripplepulsebackground:library:1.0.0'
    implementation 'com.kingfisherphuoc:easy-recyclerview-indicator:1.3'
    implementation 'com.ryanjeffreybrooks:indefinitepagerindicator:1.0.10'


    //facebook login
    implementation 'com.facebook.android:facebook-login:[5,6)'

    //circle image
    implementation 'de.hdodenhof:circleimageview:3.1.0'


    implementation 'com.google.android.exoplayer:exoplayer:2.10.3'

    //dots
    implementation 'com.github.tizisdeepan:dots:1.0.1'





}
apply plugin: 'com.google.gms.google-services'
